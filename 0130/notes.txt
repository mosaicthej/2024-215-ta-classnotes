base 10:
have 10 different atomic symbols to repre vals.

 0 1 2 3 4 5 6 7 8 9 

587 = 500 + 80 + 7
    = 5x100 + 8x10 + 7x1
    = 5x(10^2) + 8x(10^1) + 7x(10^0)


5      8      7
^2nd   ^1st   ^0th

Transitions:

from base A to base B:

1. 
find a common used base (e.g. 10)

baseA -> base 10 -> baseB

Brutal force....
Don't do this unless wants waste time

2.
when B is a power of A (vice versa)

2<->16 (hex)
2<->8  (oct)
3<->27....

B = A ^ p

Claim that:
1 symbol in B === p symbols in A

hex |base 2
0   | 0000
1   | 0001
2   | 0010
3   | 0011
4   | 0100
5   | 0101
6   | 0110
7   | 0111
8   | 1000
9   | 1001
A   | 1010
B   | 1011
C   | 1100
D   | 1101
E   | 1110
F   | 1111


0x F126ABC0

1111 0001 0010 0110 1010 1010 1100 0000  <- in base 2


Endianess 
IBM: Big Endian
Intel: Little Endian

111001010100010100101011100100

(00)11 1001 0101 0001 0100 1010 1110 0100
^padding

  3     9    5     1   4    A   E     4

0x39514AE4


2's complement:


zero= 0   = 0000 0000
MAX = 127 = 0111 1111
MIN = -128= 1000 0000
nOne= -1  = 1111 1111 = -128 + 127

----------------

let x < 0;
let y = |x| > 0;

from 0 to x, would be the same distance from 0 to y;

 x = 0-y
   = (1-1) - y
   = (-1 + 1) + (-y)
   = -1 + ((1) + (-y))
   = -1 + (1 - y)
   = -1 - (y-1)


Claim: 
  -1 - k for any k>0.
  would be same as

  NOT(k)


x < 0:
x == NOT(|x| - 1)




-10  = 0 - 10
     = -1 - (10-1)
     = -1 - 9

-1 - 9:

-1 | 1111 1111
sub| 
9  | 0000 1001
-----------------
-10| 1111 0110


-10 = NOT(9)
